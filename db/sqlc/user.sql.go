// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: user.sql

package db

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (username, password, contact_number, role_id)
VALUES ($1, $2, $3, $4) RETURNING id, username, password, contact_number, created_at, updated_at, role_id
`

type CreateUserParams struct {
	Username      sql.NullInt32  `json:"username"`
	Password      string         `json:"password"`
	ContactNumber sql.NullString `json:"contact_number"`
	RoleID        NullUserRole   `json:"role_id"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.Username,
		arg.Password,
		arg.ContactNumber,
		arg.RoleID,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.ContactNumber,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.RoleID,
	)
	return i, err
}
